@model GameMapStorageWebSite.Entities.Game
@inject IAuthorizationService authorizationService
@{
    ViewData["Title"] = Model.EnglishTitle;
    var canEdit = (await authorizationService.AuthorizeAsync(User, "AdminEdit")).Succeeded;
}
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item active" aria-current="page">@Html.DisplayFor(model => model.EnglishTitle)</li>
    </ol>
</nav>

<h1>@Html.DisplayFor(model => model.EnglishTitle)</h1>
<hr />

<h2 class="h4">Informations</h2>
<hr />
<dl class="row">
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.EnglishTitle)
    </dt>
    <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.EnglishTitle)
    </dd>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.Name)
    </dt>
    <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.Name)
    </dd>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.Attribution)
    </dt>
    <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.Attribution)
    </dd>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.OfficialSiteUri)
    </dt>
    <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.OfficialSiteUri)
    </dd>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.SteamAppId)
    </dt>
    <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.SteamAppId)
    </dd>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.LastChangeUtc)
    </dt>
    <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.LastChangeUtc)
    </dd>
</dl>

<div>
    @if (canEdit)
    {
        <a asp-action="Edit" asp-route-id="@Model?.GameId" class="btn btn-sm btn-secondary">Edit</a>
    }
    <a asp-action="Index">Back to List</a>
</div>

<h2 class="h4 mt-4">Maps</h2>
<hr />

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Maps![0].EnglishTitle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Maps![0].AppendAttribution)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Maps![0].CitiesCount)
            </th>
            @if (canEdit)
            {
            <th></th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model!.Maps!)
        {
            <tr>
                <td>
                    <a asp-controller="AdminGameMaps" asp-action="Details" asp-route-id="@item.GameMapId">@Html.DisplayFor(modelItem => item.EnglishTitle)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AppendAttribution)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CitiesCount)
                </td>
                @if (canEdit)
                {
                    <td>
                        <a asp-controller="AdminGameMaps" asp-action="Edit" asp-route-id="@item.GameMapId">Edit</a> |
                        <a asp-controller="AdminGameMaps" asp-action="Delete" asp-route-id="@item.GameMapId">Delete</a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
